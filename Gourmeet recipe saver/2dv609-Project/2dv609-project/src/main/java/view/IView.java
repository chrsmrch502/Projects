package view;

import model.Difficulty;
import model.Recipe;
import model.RecipeCollection;
import model.User;

import java.util.List;

public interface IView {
    public void askUsername();
    public void askPassword();
    public String getUserStringInput();
    public int getUserIntInput();
    public void createAccountOrLogInScreen();
    public boolean wantsToLogIn();
    public boolean wantsToCreateAccount();
    public boolean wantsToQuit();
    public boolean wantsToGoBack();
    public void readMenuSelection();
    public void mainMenuScreen();
    public boolean wantsToCreateRecipe();
    public void createARecipeScreen();
    public boolean wantsToViewOwnRecipes();
    public void showMyRecipesScreen(List<Recipe> recipes);
    public boolean wantsToViewAllPublicRecipes();
    public void showPublicRecipesScreen(List<Recipe> recipes);
    public boolean wantsToViewFilteredRecipes();
    public boolean wantsToViewOwnIngredients();
    public void showOwnIngredientsScreen(User user);
    public void writeListOfOwnIngredients(User user);
    public boolean wantsToEditOwnIngredient();
    public boolean wantsToDeleteOwnIngredient();
    public boolean wantsToAddNewOwnIngredient();
    public void askOwnIngredientID();
    public boolean wantsToLogOut();
    public void filteredRecipesScreen();
    public void askRecipeID();
    public void askCalories();
    public void askCookingTime();
    public void askSpecificIngredients();
    public void showFilteredOwnIngredientsScreen(RecipeCollection rc, User user);
    public void writeListOfRecipesByOwnIngredients(RecipeCollection rc, User user);
    public boolean wantsToViewRecipesByOwnIngredients();
    public void showFilteredCaloriesScreen(RecipeCollection rc, int calories);
    public void writeListOfRecipesByCalories(RecipeCollection rc, int calories);
    public boolean wantsToViewRecipesByCalories();
    public void showFilteredCookingTimeScreen(RecipeCollection rc, int cookingTime);
    public void writeListOfRecipesByCookingTime(RecipeCollection rc, int cookingTime);
    public boolean wantsToViewRecipesByCookingTime();
    public void showFilteredDifficultyScreen();
    public void writeListOfRecipesByDifficulty(RecipeCollection rc, Difficulty difficulty);
    public boolean wantsToViewRecipesByDifficulty();
    public boolean wantsEasyDifficulty();
    public boolean wantsMediumDifficulty();
    public boolean wantsHardDifficulty();
    public void writeListOfRecipesBySpecifiedIngredients(RecipeCollection rc, List<String> ingredients);
    public boolean wantsToViewRecipesBySpecifiedIngredients();
    public void errorMessage(String errorMessage);
    public void askRecipeTitle();
	public void askRecipeDescription();
	public void askRecipeCalories();
	public void askToMakePublic();
	public void askTotTimeInMin();
	public void askServings();
	public void askNumberOfIngredients();
	public void askIngredientName();
	public void askIngredientQuantity();
	public void askIngredientUnit();
	public void askNumberOfSteps();
	public void askStepDescription();
	public void askDifficulty();
    public void showARecipeScreenWithOptions(Recipe rec);
    public void showARecipeScreenNoOptions(Recipe rec);
    public void confirmationMessage(String confirmation);
    public boolean wantsToDeleteOwnRecipe();
    public boolean wantsToEditRecipe();
    public boolean wantsToMakePrivateOrPublic();
    public boolean wantsToConfirmQuit();
	public boolean wantsToMakePublic();
	public void resetMenuSelection();
    public void showNoOwnedRecipesScreen();
    public void deleteARecipeScreen();
    public void confirmedDeletedRecipeScreen();
}